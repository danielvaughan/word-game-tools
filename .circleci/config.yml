version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./tmp/cc-test-reporter
            chmod +x ./tmp/cc-test-reporter
      - persist_to_workspace:
          root: tmp
          paths:
            - cc-test-reporter


      # run tests
      - run: gradle test

      - store_test_results:
          path: target/surefire-reports

      #Docker
      - setup_remote_docker

      # build the image
      - run: docker build -t $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH .

      # login to docker hub
      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      # deploy the image
      - run: docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH

      # update latest tag
      - run: docker tag $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:latest
      - run: docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_BRANCH

  deploy-GCP:
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: Install gcloud SDK
          command: |
            # Create environment variable for correct distribution
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)"
            # Add the Cloud SDK distribution URI as a package source
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            # Import the Google Cloud Platform public key
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
            # Update the package list and install the Cloud SDK
            sudo apt-get update -y && sudo apt-get install -y google-cloud-sdk kubectl

      - run:
          name: Initialize & Authenticate gcloud SDK
          command: |
            echo "${GCP_KEY_FILE}" | base64 --decode >> /tmp/gcp_key.json
            gcloud auth activate-service-account --key-file /tmp/gcp_key.json
            gcloud config set project ${GCP_PROJECT}

            #push image
            source /tmp/docker_image

            echo "Deploying Image: ${$DOCKER_IMAGE_NAME} to ${K8S_DEPLOYMENT} in ${K8S_NAMESPACE}"

            kubectl rollout status deployment/${K8S_DEPLOYMENT} -n ${K8S_NAMESPACE}
